DB(DataBase)
- 구조화된 정보, 데이터의 조직화된 모음
- 컴퓨터에 전자적으로 저장이 되고 데이터베이스 관리 시스템에 의해 제어된다.

DBMS(DataBaseManagementSystem)

- 데이터베이스와 사용자 또는 프로그램 간의 매개체 역할을 하여 사용자가 정보의 구성, 검색, 수정, 삭제와 같은 관리를 할 수 있게 해준다.

DB학문 -> SQL문 -> 영어랑 어순 "조금" 비슷함
-> 접근성이 자바보다 좋을수는 있음
-> 깊이 들어가면 DB만 관리하는 직업이 따로 존재할 정도
DBA 

DBMS 의 종류
1. 계층 데이터베이스(HDBMS)
- 폴더와 파일 등의 계층 구조로 데이터를 저장하는 방식
- 데이터의 관계를 트리 구조로 정의, 부모 - 자식 형태를 가진다.
- 하드디스크, DVD파일 시스템 등
- 데이터의 액세스 속도가 빠름
2. 네트워크형 데이터 베이스 (NDBMS)
- 데이터 구조를 네트워크상의 노드 형태로 논리적이게 표현한 데이터 모델, 각각의 노드를 서로 대등한 관계로 구성한 시스템
- 계층형 데이터 베이스의 중복 문제 해결, 상하 종속적 관게 해결
3. 관계형 데이터베이스(RDBMS)
- 행,열을 가지는 표 형식 데이터르 저장하는 데이터베이스
- SQL을 이용하여 관리 및 접근
- 다양한 용도로 사용 가능(범용성), 높은 성능
- 데이터 무결성 보장, 높은 신뢰성
- 데이터의 분류, 정렬, 탐색 속도가 빠름
- 대량의 데이터 입력 처리 가능

RDBMS의 종류
- Oracle : 오라클에서 개발, 상업용으로는 유료
- MySQL : 오픈소스 커뮤니티에서 개발
- PostgreSQL : 오픈소스 커뮤니티에서 개발
- MSSQL : 마이크로소프트에서 개발
- DB2 : IBM에서 개발
- MariaDB 

DBeaver IDE 설치하기
- jdk 가 설치되어 있지 않으면 작동 안함

데이터베이스의 사용자 계정
- 데이터베이스의 생성 및 관리, ㅔㄷ이터의 삽입, 수정, 변경 및 삭제를 수행하는 데이터베이스 계정을 의미한다.

관리자 계정(Administrator)
- 데이터베이스의 생성과 관리를 담당하는 슈퍼유저(super user) 계정이며, 정의, 생성, 삭제 등의 작업이 가능하다.
- 오라클 데이터베이스 생성시 관리자 계정인 SYS, SYSTEM 계정이 자동으로 생성된다.
- 데이터베이스에 대한 모든 권한과 책임을 가지는 계정

일반계정
- 데이터베이스에 대하여 명령(Query), 갱신, 보고서 작성 등의 작업을 수행할 수 있는 계정
- 일반 계정은 업무에 필요한 최소한의 권한만 가지는 것을 원칙으로 한다.

데이터베이스 접속하기
sqlplus

계정명/비밀번호 입력하고 로그인하기

계정언락하기
Alter user 계정명 account unlock;

계정 비밀번호 설정하기
alter user 계정명 identified by 새비밀번호;

ojdbc11.jar
- 데이터베이스와 통신을 담당하는 인터페이스
- Oracle Java DataBase Connectivity 의 약자
- Oracle 전용의 jdbc 라이브러리이다.
- Oracle에서 제공하는 오라클 DB를 관리할 수 있도록 해주는 JDBC이다.
- MYSQL,MSSQL등과 같은 DBMS 에 맞는 JDBC드라이버를 사용해야 한다.
- JDBC드라이버의 구현체를 이용해서 특정 벤더의 데이터베이스에 접근할 수 있다. 

JDBC
- JDBC (Java DataBase Connectivity)는 Java 기반 어플리케이션 데이터를 데이터베이스에 저장 및 업데이트 하거나 데이터베이스에 저장된 데이터를 Java에서 사용할 수 있도록 하는 자바 API이다. 
- Java로 만든 프로그램에서 데이터베이스에 접근하기 위해 JDBC API를 사용하여 데이터베이스에 연동할 수 있으며, 데이터베이스에서 자료를 조회하거나 업데이트하는 방법을 제공한다.
- JDBC API는 java.sql.* 패키지에 의해 구현된다. 

스키마
1. 데이터베이스의 구조와 제약 조건에 대한 전반적인 명세를 기술한 메타데이터의 집합
2. 스키마는 데이터베이스를 구성하는 데이터 개체(Entity), 속성(Attribute), 관계 (Relationship)및 데이터 조작 시 데이터 값들이 갖는 제약조건등에 전반적으로 정의한다.
3. 스키마는 사용자 관점에 따라 외부 스키마, 개념 스키마, 내부 스키마로 나뉜다.

스키마의 종류
1. 개념스키마 : 전체적인 뷰
- 조직체 전체를 관장하는 입장에서 DB를 정의한 것
- 관계, 제약조건, 접근 권한, 보안 정책, 무결성 규칙에 관한 사항을 포함하고 있다.
- 개념 스키마를 '스키마'라고 칭하기도 하며, DB전체를 기술한 것이기 때문에 한 개 밖에 존재할 수 없다.

2. 내부스키마 : 물리적인 저장장치 입장에서 DB가 저장되는 방법을 기술한 것 
- 스키마를 물리적으로 어떻게 디스크에 구현하기 위한 방법을 기술한 것
- 데이터의 실제 저장방법을 기술
- 시스템 프로그래머나 설계자가 보는 관점의 스키마

3. 외부스키마 : 사용자의 관점
- 사용자나 응용 프로그래머가 개인의 입장에서 필요한 데이터베이스의 논리적 구조를 정의
- 실세계의 존재하는 데이터들을 어떤 형식, 구조, 배치 화면을 통해 사용자에게 보여줄 것인가
- 전체 데이터베이스의 한 논리적 부분
- 하나의 데이터베이스는 여러개의 외부 스키마가 존재할 수 있다.
운전면허시험, 운전면허증, 운전면허필기시험, 운전면허기능
- 개발자 입장에서는 C, JAVA를 통해 DB에 접근해서 데이터를 얻어온다.

SQL문
- 구조화된 질의 언어(Sturctured Query Language) 의 약자로 DBMS 상에서 데이터를 읽고 쓰고 삭제하는 등 데이터를 관리하기 위한 일종의 프로그램 언어
- C, JAVA 같은 일반 프로그래밍 언어는 절차적 언어라고 할 수 있는데 반해 SQL은 집합적 언어이다.
- 집합적 언어는 데이터를 특정 집합 단위로 분류해 이 단위별로 한 번에 처리 하는 언어이다.
- RDBMS의 표준 언어로 SQL을 채택했고, 표준 SQL문을 학습하면 오라클은 물론 MSSQL, MYSQL 등 여러 DBMS 에서 동일하게 사용할 수 있다.
- 물론 DBMS별로 독특한 기능이 있지만, 다른 프로그래밍 언어에 비해 그 차이는 미미하다.
- SQL 문장은 대소문자를 구별하지 않는다.
- 한 줄 또는 여러줄에 걸쳐 입력하는 것이 가능하다.
- SQL문장의 끝은 세미콜론(;)으로 맺어야 한다.

SQL문의 종류
1. DDL(Data Definition Language) : 데이터 정의어
- 데이터베이스 객체를 관리하는 언어
2. DML(Data Manipulation Language) : 데이터 조작어
- 데이터 삽입, 조회, 삭제, 갱신 등 실제로 데이터를 조작하는 언어이다.
- 개발자 입장에서 가장 많이 사용하는 SQL 문이다.
3. DCL(Data Controll Language) : 데이터 제어어
- 권한을 주거나 뺏는 키워드를 가지는 문장
4. TCL(Transaction Controll Language) : 트랜잭션 제어어
- 데이터를 데이터베이스에 적용 혹은 되돌리는 키워드를 갖는 문장

DDL(Data Definition Language) : 데이터 정의어
- 데이터베이스 객체를 생성, 삭제, 변경하는 언어이다.
1. CREATE : 테이블이나, 인덱스, 뷰 등 데이터베이스 객체를 생성한다.
2. DROP : 생성된 데이터베이스 객체를 영구 삭제
3. ALTER : 이미 생성된 데이터베이스 객체를 수정
4. TRUNCATE:

테이블
- 행과 열로 이루어진 데이터의 집합
- 엑셀의 모양과 굉장히 흡사하다.
- 일반적인 데이터베이스에서는 행과 열만 있으면 테이블이라고 하지만, 관계형 데이터 베이스에서는 특별한 제약을 추가하기 때문에 릴레이션(relation)이라고도 부른다. 



























